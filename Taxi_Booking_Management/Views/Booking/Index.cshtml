@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@inject IConfiguration Configuration

@model IPagedList<Booking>

@{
    ViewData["Title"] = "All Booking Details";
}
<style>
    .dropdown-menu {
        display: none;
        position: absolute;
        background-color: white;
        min-width: 160px;
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-menu button {
            width: 100%;
            text-align: left;
            padding: 12px 16px;
            border: none;
            background-color: transparent;
            cursor: pointer;
        }

            .dropdown-menu button:hover {
                background-color: #f1f1f1;
                color: red;
            }
</style>
<div class="d-flex mt-3 justify-content-between align-items-center">
    <h2 class="d-inline">All Booking Details</h2>
    <div>
        <a href="@Url.Action("RegisterBooking", "Booking")" class="btn btn-primary ms-2">Add New</a>
        <a href="@Url.Action("GetAvailableTaxi", "Booking")" class="btn btn-primary">Check Available Taxi</a>
        <a href="@Url.Action("CheckBookingAvailbility", "Booking")" class="btn btn-primary">Check Availability</a>
    </div>
</div>

<div class="d-flex mt-3 justify-content-between">
    @using (Html.BeginForm("Index", "Booking", FormMethod.Get, new { @class = "d-flex", id = "filterForm" }))
    {
        <div class="form-group me-2">
            <input type="text" name="Search" class="form-control" value="@ViewBag.Search" placeholder="Search by booking no" onkeypress="handleKeyPress(event)">
        </div>

        <div class="form-group me-2">
            <select name="StatusFilter" class="form-control" onchange="submitForm()">
                <option value="">-- Select Taxi Status --</option>
                <option value="1">Pending</option>
                <option value="2">Booked</option>
                <option value="3">Canceled</option>
            </select>
        </div>

        <div class="form-group me-2">
            <input type="date" name="startDate" placeholder="From date" class="form-control" value="@ViewBag.startDate">
        </div>
        <div class="form-group me-2">
            <input type="date" name="endDate" placeholder="To date" class="form-control" value="@ViewBag.endDate">
        </div>

        <button type="button" class="btn btn-outline-success" onclick="submitForm()">
            <i class="fas fa-search"></i>
        </button>

        <p type="button" class="mt-3 ms-2" onclick="clearFilters()">
            <i class="fas fa-times"></i>
        </p>
    }
    

   
</div>

<table class="table table-striped  mt-3">
    <thead>
        <tr class="table-primary">
            <th class="text-center">Customer name</th>
            <th class="text-center">Booking code</th>
            <th class="text-center">From date</th>
            <th class="text-center">To date</th>
            <th class="text-center">Net amount</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var details in Model)
        {
            <tr>
                <td class="text-center">@details.CustomerName</td>
                <td class="text-center">@details.BookingCode</td>
                <td class="text-center">@details.FromDate.ToString("dd/MMM/yyyy")</td>
                <td class="text-center">@details.ToDate.ToString("dd/MMM/yyyy")</td>
                <td class="text-center">@Configuration["AppSettings:indianCurrency"] @details.NetAmount</td>

                <td class="text-center">
                    <a href="@Url.Action("CreatePayment", "PaymentHistory", new { bookingCode =@details.BookingCode})" class="btn btn-primary ms-2">Make Payment</a>
                    <a href="@Url.Action("BookingDetails","Booking", new { bookingid =@details.BookingId })" class="btn btn-info ms-2">Details</a>
                    <div class="dropdown mt-2" id="dropdown">
                        <button class="btn btn-sm dropdown-button
                        @(details.BookingStatus  == 1 ? "btn-warning" :
                        details.BookingStatus  == 2 ? "btn-success" :
                        details.BookingStatus == 3 ? "btn-danger" : "") dropdown-toggle" type="button" id="dropdownButton">
                            @Enum.GetName(typeof(Taxi_Booking_Management.Common.Enums.BookingStatus), details.BookingStatus)
                        </button>
                        <div class="dropdown-menu" id="dropdownMenu">
                            <button class="dropdown-item" onclick="updateBookingStatus(@details.BookingId , 1)">Pending</button>
                            <button class="dropdown-item" onclick="updateBookingStatus(@details.BookingId , 2)">Booked</button>
                            <button class="dropdown-item" onclick="updateBookingStatus(@details.BookingId , 3)">Canceled</button>
                        </div>
                    </div>
                </td>


            </tr>
        }
        @if (Model.TotalItemCount <= 0)
        {
            <tr>
                <td colspan="6" class="text-center">No Result Found</td>
            </tr>
        }
    </tbody>

</table>
@if (Model != null && Model.Count() > 0)
{
    <br />
    <div class="pull-right" style="float:right;margin-right:10px;">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
                new
                {
                    page,
                    Search = ViewBag.Search,
                    statusFilter = ViewBag.StatusFilter,
                    StartDate = ViewBag.startDate,
                    EndDate = ViewBag.endDate,
                }),
                new PagedListRenderOptionsBase
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        Display = PagedListDisplayMode.Always

    })
    </div>
}
@section Scripts {
    <script>
        function updateBookingStatus(bookingId, status) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateBookingStatus", "Booking")',
                data: { bookingId: bookingId, bookingStatus: status },
                success: function (response) {
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }

            });
        }

        function submitForm() {
            document.forms["filterForm"].submit();
        }

        function clearFilters() {

            var tempArray = location.href.split("?");
            var baseURL = tempArray[0];
            window.location.replace(baseURL);
        }


        function handleKeyPress(event) {
            if (event.keyCode === 13) {
                submitForm();
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            var statusFilter = "@ViewBag.StatusFilter";
            var dropdown = document.getElementsByName("StatusFilter")[0];

            for (var i = 0; i < dropdown.options.length; i++) {
                if (dropdown.options[i].value === statusFilter) {
                    dropdown.options[i].setAttribute("selected", "selected");
                }
            }
        });

        // JavaScript to toggle dropdown menu
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownButtons = document.querySelectorAll('.dropdown-button');

            dropdownButtons.forEach(function (dropdownButton) {
                var dropdownMenu = dropdownButton.nextElementSibling;

                dropdownButton.addEventListener('click', function (event) {
                    if (dropdownMenu.style.display === 'block') {
                        dropdownMenu.style.display = 'none';
                    } else {
                        closeAllDropdowns();
                        dropdownMenu.style.display = 'block';
                    }
                    event.stopPropagation(); // Prevent the click event from bubbling up
                });

                dropdownMenu.addEventListener('click', function (event) {
                    event.stopPropagation(); // Prevent the click event from bubbling up
                });
            });

            window.addEventListener('click', function (event) {
                closeAllDropdowns();
            });

            function closeAllDropdowns() {
                var dropdownMenus = document.querySelectorAll('.dropdown-menu');
                dropdownMenus.forEach(function (dropdownMenu) {
                    dropdownMenu.style.display = 'none';
                });
            }
        });
    </script>
}

