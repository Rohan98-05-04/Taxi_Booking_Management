@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<Booking>

@{
    ViewData["Title"] = "All Customer Details";
}


<h2 class="d-inline">All Customer Details </h2>


<div class="d-flex mt-3 justify-content-between">
    @using (Html.BeginForm("Index", "TaxiDriver", FormMethod.Get, new { @class = "d-flex" }))
    {
        <div class="form-group me-2">
            <input type="text" name="Search" class="form-control" value="@ViewBag.Search" placeholder="Search by name">
        </div>
        <button type="submit" class="btn btn-outline-success">
            <i class="fas fa-search"></i>
        </button>
    }


</div>

<table class="table table-striped  mt-3">
    <thead>
        <tr class="table-primary">
            <th class="text-center">Customer Name</th>
            <th class="text-center">Mobile Number</th>
           


        </tr>
    </thead>
    <tbody>
        @foreach (var details in Model)
        {
            <tr>
                <td class="text-center">@details.CustomerName</td>
                <td class="text-center">@details.CustomerMobile</td>
                

            </tr>
        } 
        @if (Model.TotalItemCount <= 0)
        {
            <tr>
                <td colspan="6" class="text-center">No Result Found</td>
            </tr>
        }
    </tbody>

</table>
@if (Model != null && Model.Count() > 0)
{
    <br />
    <div class="pull-right" style="float:right;margin-right:10px;">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
                new
                {
                    page,
                    Search = ViewBag.Search
                }),
                new PagedListRenderOptionsBase
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        Display = PagedListDisplayMode.Always

    })
    </div>
}

@*  @functions {
    // Helper function to truncate the description to a specified number of words
    string Truncate(string input, int wordCount)
    {
        if (string.IsNullOrWhiteSpace(input) || input == null)
            return "Not Available";

        var words = input.Split(' ');
        if (words.Length <= wordCount)
            return input;

        return string.Join(' ', words.Take(wordCount)) + " ...";
    }
} *@


